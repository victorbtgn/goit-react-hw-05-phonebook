{"version":3,"sources":["Common/Container.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/Contacts/ContactItem.js","Components/Contacts/ContactList.js","Common/Section.js","utils/helper.js","App.js","index.js"],"names":["Container","children","className","ContactForm","state","name","number","inputChange","currentTarget","value","setState","createContact","evt","preventDefault","length","toaster","notify","duration","props","onSubmit","reset","this","type","onChange","Component","Filter","filter","contactsLength","ContactItem","id","onDelete","onClick","ContactList","contacts","map","key","Section","title","defaultProps","getFromLS","item","localStorage","getItem","JSON","parse","error","Error","App","addContact","find","contact","uuidv4","deleteContact","prevState","prevProps","setItem","stringify","saveToLS","toLowerFilter","toLowerCase","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8a169c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className=\"container\">\r\n    <div className=\"phonebook\">{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\nimport toaster from 'toasted-notes';\nimport 'toasted-notes/src/styles.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  inputChange = ({ currentTarget: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  createContact = evt => {\n    evt.preventDefault();\n\n    if (this.state.number.length < 7 || this.state.number.length > 7) {\n      toaster.notify('Please fill the correct number: 12-34-567', {\n        duration: 5000,\n      });\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.createContact}>\n        <label>\n          Name *\n          <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className=\"input\"\n            onChange={this.inputChange}\n          />\n        </label>\n        <br />\n        <label>\n          Phone number *\n          <br />\n          <input\n            type=\"number\"\n            name=\"number\"\n            value={number}\n            className=\"input\"\n            onChange={this.inputChange}\n          />\n        </label>\n        <br />\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, contactsLength, onChange }) => (\r\n  <>\r\n    {contactsLength > 1 && (\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          className=\"input\"\r\n          // placeholder=\"Phone number\"\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    )}\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contactsLength: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, number, onDelete }) => (\n  <li className=\"list-item\">\n    <div className=\"list-item-data\">\n      <span>{name}:</span>\n      <span>\n        {number[0]}\n        {number[1]}-{number[2]}\n        {number[3]}-{number[4]}\n        {number[5]}\n        {number[6]}\n      </span>\n    </div>\n    <button className=\"btn\" type=\"button\" onClick={() => onDelete(id)}>\n      Delete\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n\n// .toLocaleString('en-IN')\n","import React from 'react';\r\nimport ContactItem from './ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul className=\"list\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDelete={() => onDelete(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    {title && <h2 className=\"feedback-title\">{title}</h2>}\r\n\r\n    <section className=\"section\">{children}</section>\r\n  </>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","export const saveToLS = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    throw new Error();\n  }\n};\n\nexport const getFromLS = key => {\n  try {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : null;\n  } catch (error) {\n    throw new Error();\n  }\n};\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from './Common/Container';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/Contacts/ContactList';\nimport Section from './Common/Section';\nimport toaster from 'toasted-notes';\nimport 'toasted-notes/src/styles.css';\nimport { saveToLS, getFromLS } from './utils/helper';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    if (getFromLS('contacts')) {\n      this.setState({ contacts: getFromLS('contacts') });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      saveToLS('contacts', this.state.contacts);\n    }\n  }\n\n  inputChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const isExist = contacts.find(contact => contact.name === name);\n\n    if (isExist) {\n      toaster.notify(`${name} is already in contacts.`, {\n        duration: 5000,\n      });\n    } else if (!name || !number) {\n      toaster.notify('Please fill the form', {\n        duration: 5000,\n      });\n    } else {\n      const contact = {\n        id: uuidv4(),\n        name: name,\n        number: number,\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const toLowerFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(toLowerFilter),\n    );\n\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact} onChange={this.inputChange} />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter\n            filter={filter}\n            contactsLength={contacts.length}\n            onChange={this.inputChange}\n          />\n          <ContactList\n            contacts={visibleContacts}\n            onDelete={this.deleteContact}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}