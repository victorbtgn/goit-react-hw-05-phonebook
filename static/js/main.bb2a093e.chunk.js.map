{"version":3,"sources":["Common/Container/Container.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/Contacts/ContactItem.js","Components/Contacts/ContactList.js","Common/Section/Section.js","Components/Alert/Alert.js","utils/helper.js","Common/ThemeContext/ThemeContext.js","Common/HOC/withTheme.js","App.js","index.js"],"names":["Container","children","className","ContactForm","state","name","number","inputChange","currentTarget","value","setState","createContact","evt","preventDefault","length","toaster","notify","duration","props","onSubmit","reset","this","type","onChange","Component","Filter","filter","contactsLength","ContactItem","id","onDelete","onClick","ContactList","contacts","TransitionGroup","map","CSSTransition","key","timeout","classNames","Section","title","defaultProps","Alert","message","status","saveToLS","localStorage","setItem","JSON","stringify","error","Error","getFromLS","item","getItem","parse","withTheme","checked","handleCheckbox","prevProps","prevState","onChecked","React","handleTheme","target","htmlFor","body","document","querySelector","classList","add","remove","App","alert","timerId","addContact","find","contact","toggleAlert","setTimeout","uuidv4","deleteContact","toLowerFilter","toLowerCase","visibleContacts","includes","Transition","in","appear","ReactDOM","render","StrictMode","getElementById"],"mappings":"uVASeA,G,MANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,yBAAKC,UAAU,aACb,yBAAKA,UAAU,aAAaD,M,QCiEjBE,G,kNAjEbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAc,YAAyC,IAAD,IAArCC,cAAiBH,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,MACtC,EAAKC,SAAL,eAAiBL,EAAOI,K,EAG1BE,cAAgB,SAAAC,GACdA,EAAIC,iBAEA,EAAKT,MAAME,OAAOQ,OAAS,GAAK,EAAKV,MAAME,OAAOQ,OAAS,EAC7DC,IAAQC,OAAO,4CAA6C,CAC1DC,SAAU,OAKd,EAAKC,MAAMC,SAAS,EAAKf,OAEzB,EAAKgB,U,EAGPA,MAAQ,WACN,EAAKV,SAAS,CAAEL,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBe,KAAKjB,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,0BAAMa,SAAUE,KAAKV,eACnB,wCAEE,6BACA,2BACEW,KAAK,OACLjB,KAAK,OACLI,MAAOJ,EACPH,UAAU,QACVqB,SAAUF,KAAKd,eAGnB,6BACA,gDAEE,6BACA,2BACEe,KAAK,SACLjB,KAAK,SACLI,MAAOH,EACPJ,UAAU,QACVqB,SAAUF,KAAKd,eAGnB,6BACA,4BAAQL,UAAU,MAAMoB,KAAK,UAA7B,oB,GA1DkBE,cCwBXC,EAzBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,eAAgBJ,EAA3B,EAA2BA,SAA3B,OACb,oCACGI,EAAiB,GAChB,uDAEE,6BACA,2BACEL,KAAK,OACLjB,KAAK,SACLI,MAAOiB,EACPxB,UAAU,QAEVqB,SAAUA,OCaLK,EAzBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQwB,EAArB,EAAqBA,SAArB,OAClB,wBAAI5B,UAAU,aACZ,yBAAKA,UAAU,kBACb,8BAAOG,EAAP,KACA,8BACGC,EAAO,GACPA,EAAO,GAFV,IAEeA,EAAO,GACnBA,EAAO,GAHV,IAGeA,EAAO,GACnBA,EAAO,GACPA,EAAO,KAGZ,4BAAQJ,UAAU,aAAaoB,KAAK,SAASS,QAAS,kBAAMD,EAASD,KAArE,U,gBCcWG,EAxBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUH,EAAe,EAAfA,SAC/B,OACE,wBAAI5B,UAAU,QACZ,kBAACgC,EAAA,EAAD,KACGD,EAASE,KAAI,gBAAGN,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,kBAAC8B,EAAA,EAAD,CAAeC,IAAKR,EAAIS,QAAS,IAAKC,WAAW,iBAC/C,kBAAC,EAAD,CACEV,GAAIA,EACJxB,KAAMA,EACNC,OAAQA,EACRwB,SAAU,kBAAMA,EAASD,aCZjCW,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOxC,EAAV,EAAUA,SAAV,OACd,oCACGwC,GAAS,wBAAIvC,UAAU,kBAAkBuC,GAE1C,6BAASvC,UAAU,WAAWD,KAIlCuC,EAAQE,aAAe,CACrBD,MAAO,IAOMD,QCVAG,EAPD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAZ,OACZ,0BAAM3C,UAAS,sBAAiB2C,IAAWD,ICHhCE,EAAW,SAACT,EAAK5B,GAC5B,IACEsC,aAAaC,QAAQX,EAAKY,KAAKC,UAAUzC,IACzC,MAAO0C,GACP,MAAM,IAAIC,QAIDC,EAAY,SAAAhB,GACvB,IACE,IAAMiB,EAAOP,aAAaQ,QAAQlB,GAClC,OAAOiB,EAAOL,KAAKO,MAAMF,GAAQ,KACjC,MAAOH,GACP,MAAM,IAAIC,Q,QCWCK,G,MCrBG,SAAAjC,GAAS,mNAEvBpB,MAAQ,CAAEsD,SAAS,GAFI,EAgBvBC,eAAiB,SAAAD,GACf,EAAKhD,SAAS,CAAEgD,QAASA,KAjBJ,kEAKjBL,EAAU,YACZhC,KAAKX,SAAS,CAAEgD,QAASL,EAAU,eANhB,yCAUJO,EAAWC,GACxBA,EAAUH,UAAYrC,KAAKjB,MAAMsD,SACnCZ,EAAS,UAAWzB,KAAKjB,MAAMsD,WAZZ,+BAqBrB,OACE,oCACE,kBAAClC,EAAD,iBACMH,KAAKH,MADX,CAEEwC,QAASrC,KAAKjB,MAAMsD,QACpBI,UAAWzC,KAAKsC,uBA1BD,GACAI,IAAMvC,WDoBlBiC,EArBM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASI,EAAgB,EAAhBA,UAO/B,OAFAE,EAAYN,GAGV,yBAAKxD,UAAU,gBACb,2BACEoB,KAAK,WACLO,GAAG,QACHxB,KAAK,QACLqD,QAASA,EACTnC,SAbiB,SAAAX,GACrBkD,EAAUlD,EAAIqD,OAAOP,YAcnB,2BAAOQ,QAAQ,SAASR,EAAU,OAAS,cAO3CM,EAAc,SAAAN,GAClB,GAAKA,EAIE,CACL,IAAMS,EAAOC,SAASC,cAAc,QACpCF,EAAKG,UAAUC,IAAI,YACnBJ,EAAKG,UAAUE,OAAO,iBAPV,CACZ,IAAML,EAAOC,SAASC,cAAc,QACpCF,EAAKG,UAAUC,IAAI,aACnBJ,EAAKG,UAAUE,OAAO,cEfLC,E,4MACnBrE,MAAQ,CACN6B,SAAU,GACVP,OAAQ,GACRgD,OAAO,EACPC,QAAS,M,EAmBXpE,YAAc,YAAwB,IAArBC,EAAoB,EAApBA,cACPH,EAAgBG,EAAhBH,KAAMI,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBL,EAAOI,K,EAG1BmE,WAAa,YAAuB,IAApBvE,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAKpB,GAJqB,EAAKF,MAAlB6B,SAEiB4C,MAAK,SAAAC,GAAO,OAAIA,EAAQzE,OAASA,KAE7C,CACX,EAAK0E,cACL,IAAMJ,EAAUK,YAAW,kBAAM,EAAKD,gBAAe,KACrD,EAAKrE,SAAS,CAAEiE,QAASA,SACpB,GAAKtE,GAASC,EAId,CACL,IAAMwE,EAAU,CACdjD,GAAIoD,cACJ5E,KAAMA,EACNC,OAAQA,GAGV,EAAKI,UAAS,gBAAGuB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAE6C,GAAH,mBAAe7C,aAXzBlB,IAAQC,OAAO,uBAAwB,CACrCC,SAAU,O,EAehBiE,cAAgB,SAAArD,GACd,EAAKnB,UAAS,SAAAmD,GAAS,MAAK,CAC1B5B,SAAU4B,EAAU5B,SAASP,QAAO,SAAAoD,GAAO,OAAIA,EAAQjD,KAAOA,U,EAIlEkD,YAAc,WACZ,EAAKrE,UAAS,kBAAgB,CAAEgE,OAAlB,EAAGA,W,kEArDbrB,EAAU,aACZhC,KAAKX,SAAS,CAAEuB,SAAUoB,EAAU,gB,yCAIrBO,EAAWC,GACxBA,EAAU5B,WAAaZ,KAAKjB,MAAM6B,UACpCa,EAAS,WAAYzB,KAAKjB,MAAM6B,UAG9B4B,EAAUc,UAAYtD,KAAKjB,MAAMuE,SACnCtD,KAAKX,SAAS,CAAEiE,QAAS,S,+BA6CnB,IAAD,EAC6BtD,KAAKjB,MAAjC6B,EADD,EACCA,SAAUP,EADX,EACWA,OAAQgD,EADnB,EACmBA,MACpBS,EAAgBzD,EAAO0D,cACvBC,EAAkBpD,EAASP,QAAO,SAAAoD,GAAO,OAC7CA,EAAQzE,KAAK+E,cAAcE,SAASH,MAGtC,OACE,oCACE,kBAAC,EAAD,KACE,kBAACI,EAAA,EAAD,CAAYC,IAAI,EAAMlD,QAAS,IAAKmD,QAAM,IACvC,SAAA5C,GAAM,OAAI,wBAAI3C,UAAS,kBAAa2C,IAA1B,gBAGb,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAASJ,MAAM,eACb,kBAAC,EAAD,CACEtB,SAAUE,KAAKuD,WACfrD,SAAUF,KAAKd,eAInB,kBAAC,EAAD,CAASkC,MAAM,YACb,kBAAC,EAAD,CACEf,OAAQA,EACRC,eAAgBM,EAASnB,OACzBS,SAAUF,KAAKd,cAEjB,kBAAC,EAAD,CACE0B,SAAUoD,EACVvD,SAAUT,KAAK6D,kBAKpBR,GACC,kBAACa,EAAA,EAAD,CAAYC,IAAI,EAAMlD,QAAS,IAAKmD,QAAM,IACvC,SAAA5C,GAAM,OACL,kBAAC,EAAD,CAAOD,QAAQ,yBAAyBC,OAAQA,Y,GAxG7BrB,aCVjCkE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxB,SAASyB,eAAe,W","file":"static/js/main.bb2a093e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className=\"container\">\r\n    <div className=\"phonebook\">{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\nimport toaster from 'toasted-notes';\nimport 'toasted-notes/src/styles.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  inputChange = ({ currentTarget: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  createContact = evt => {\n    evt.preventDefault();\n\n    if (this.state.number.length < 7 || this.state.number.length > 7) {\n      toaster.notify('Please fill the correct number: 12-34-567', {\n        duration: 5000,\n      });\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.createContact}>\n        <label>\n          Name *\n          <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className=\"input\"\n            onChange={this.inputChange}\n          />\n        </label>\n        <br />\n        <label>\n          Phone number *\n          <br />\n          <input\n            type=\"number\"\n            name=\"number\"\n            value={number}\n            className=\"input\"\n            onChange={this.inputChange}\n          />\n        </label>\n        <br />\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, contactsLength, onChange }) => (\r\n  <>\r\n    {contactsLength > 1 && (\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          className=\"input\"\r\n          // placeholder=\"Phone number\"\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    )}\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contactsLength: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, number, onDelete }) => (\n  <li className=\"list-item\">\n    <div className=\"list-item-data\">\n      <span>{name}:</span>\n      <span>\n        {number[0]}\n        {number[1]}-{number[2]}\n        {number[3]}-{number[4]}\n        {number[5]}\n        {number[6]}\n      </span>\n    </div>\n    <button className=\"btnContact\" type=\"button\" onClick={() => onDelete(id)}>\n      &#215;\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n\n// .toLocaleString('en-IN')\n","import React from 'react';\r\nimport ContactItem from './ContactItem';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul className=\"list\">\r\n      <TransitionGroup>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <CSSTransition key={id} timeout={250} classNames=\"PhonebookList\">\r\n            <ContactItem\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onDelete={() => onDelete(id)}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    {title && <h2 className=\"feedback-title\">{title}</h2>}\r\n\r\n    <section className=\"section\">{children}</section>\r\n  </>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ message, status }) => (\r\n  <span className={`alert alert-${status}`}>{message}</span>\r\n  //   <button type=\"button\" className={`alert alert-${status}`}>\r\n  // {message}\r\n  //   </button>\r\n);\r\n\r\nexport default Alert;\r\n","export const saveToLS = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    throw new Error();\n  }\n};\n\nexport const getFromLS = key => {\n  try {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : null;\n  } catch (error) {\n    throw new Error();\n  }\n};\n","import React from 'react';\r\nimport withTheme from '../HOC/withTheme';\r\n\r\nconst ThemeContext = ({ checked, onChecked }) => {\r\n  const handleCheckbox = evt => {\r\n    onChecked(evt.target.checked);\r\n  };\r\n\r\n  handleTheme(checked);\r\n\r\n  return (\r\n    <div className=\"ThemeContext\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"theme\"\r\n        name=\"theme\"\r\n        checked={checked}\r\n        onChange={handleCheckbox}\r\n      />\r\n      <label htmlFor=\"theme\">{checked ? 'Dark' : 'Ligth'}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(ThemeContext);\r\n\r\nconst handleTheme = checked => {\r\n  if (!checked) {\r\n    const body = document.querySelector('body');\r\n    body.classList.add('bodyLigth');\r\n    body.classList.remove('bodyDark');\r\n  } else {\r\n    const body = document.querySelector('body');\r\n    body.classList.add('bodyDark');\r\n    body.classList.remove('bodyLigth');\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { saveToLS, getFromLS } from '../../utils/helper';\r\n\r\nconst withTheme = Component =>\r\n  class themeProps extends React.Component {\r\n    state = { checked: false };\r\n\r\n    componentDidMount() {\r\n      if (getFromLS('checked')) {\r\n        this.setState({ checked: getFromLS('checked') });\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (prevState.checked !== this.state.checked) {\r\n        saveToLS('checked', this.state.checked);\r\n      }\r\n    }\r\n\r\n    handleCheckbox = checked => {\r\n      this.setState({ checked: checked });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          <Component\r\n            {...this.props}\r\n            checked={this.state.checked}\r\n            onChecked={this.handleCheckbox}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\nexport default withTheme;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from './Common/Container/Container';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/Contacts/ContactList';\nimport Section from './Common/Section/Section';\nimport Alert from './Components/Alert/Alert';\nimport toaster from 'toasted-notes';\nimport 'toasted-notes/src/styles.css';\nimport { saveToLS, getFromLS } from './utils/helper';\nimport { Transition } from 'react-transition-group';\nimport './App.css';\nimport ThemeContext from './Common/ThemeContext/ThemeContext';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    alert: false,\n    timerId: null,\n  };\n\n  componentDidMount() {\n    if (getFromLS('contacts')) {\n      this.setState({ contacts: getFromLS('contacts') });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      saveToLS('contacts', this.state.contacts);\n    }\n\n    if (prevState.timerId !== this.state.timerId) {\n      this.setState({ timerId: null });\n    }\n  }\n\n  inputChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const isExist = contacts.find(contact => contact.name === name);\n\n    if (isExist) {\n      this.toggleAlert();\n      const timerId = setTimeout(() => this.toggleAlert(), 5000);\n      this.setState({ timerId: timerId });\n    } else if (!name || !number) {\n      toaster.notify('Please fill the form', {\n        duration: 5000,\n      });\n    } else {\n      const contact = {\n        id: uuidv4(),\n        name: name,\n        number: number,\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  toggleAlert = () => {\n    this.setState(({ alert }) => ({ alert: !alert }));\n  };\n\n  render() {\n    const { contacts, filter, alert } = this.state;\n    const toLowerFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(toLowerFilter),\n    );\n\n    return (\n      <>\n        <Container>\n          <Transition in={true} timeout={500} appear>\n            {status => <h1 className={`h1Title-${status}`}>Phonebook</h1>}\n          </Transition>\n\n          <ThemeContext />\n\n          <Section title=\"New contact\">\n            <ContactForm\n              onSubmit={this.addContact}\n              onChange={this.inputChange}\n            />\n          </Section>\n\n          <Section title=\"Contacts\">\n            <Filter\n              filter={filter}\n              contactsLength={contacts.length}\n              onChange={this.inputChange}\n            />\n            <ContactList\n              contacts={visibleContacts}\n              onDelete={this.deleteContact}\n            />\n          </Section>\n        </Container>\n\n        {alert && (\n          <Transition in={true} timeout={100} appear>\n            {status => (\n              <Alert message=\"Contact already exists\" status={status} />\n            )}\n          </Transition>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}